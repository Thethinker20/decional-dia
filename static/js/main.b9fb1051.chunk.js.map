{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Devocional","data","className","title","date","vers","content","map","n","m","App","useState","undefined","devocion","setDevotion","isLoad","setIsLoad","error","setError","useEffect","axios","get","then","catch","erro","finally","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAqCA,SAASA,EAAT,GAA4B,IAAPC,EAAM,EAANA,KACnB,OACE,sBAAKC,UAAU,WAAf,UACI,oBAAIA,UAAU,WAAd,SAA0BD,EAAKE,QAC/B,mBAAGD,UAAU,UAAb,SAAwBD,EAAKG,OAC7B,mBAAGF,UAAU,UAAb,SAAwBD,EAAKI,OAC7B,qBAAKH,UAAU,aAAf,SACKD,EAAKK,QAAQC,KAAI,SAACC,EAAEC,GAAH,OAAS,4BAAYD,GAAJC,WAMhCC,MA9Cf,WAAgB,IAAD,EACmBC,wBAASC,GAD5B,mBACNC,EADM,KACIC,EADJ,OAEeH,oBAAS,GAFxB,mBAENI,EAFM,KAEEC,EAFF,OAGaL,wBAASC,GAHtB,mBAGNK,EAHM,KAGCC,EAHD,KAYb,OAPAC,qBAAU,WACRC,IAAMC,IAAI,kEACTC,MAAK,gBAAErB,EAAF,EAAEA,KAAF,OAAYa,EAAYb,EAAK,OAClCsB,OAAM,SAACC,GAAD,OAAUN,EAASM,MACzBC,SAAQ,kBAAMT,GAAU,QACzB,IAECC,EAEC,sBAAKf,UAAU,MAAf,UACE,iDACA,wCAAWe,EAAMS,cAGdX,EAQL,qBAAKb,UAAU,MAAf,SACE,cAACF,EAAD,CAAYC,KAAMY,MAPpB,qBAAKX,UAAU,MAAf,SACE,oBAAIA,UAAU,UAAd,4BCdOyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b9fb1051.chunk.js","sourcesContent":["import './App.css';\nimport axios from 'axios';\nimport {useEffect, useState} from 'react';\n\nfunction App() {\n  const [devocion, setDevotion] = useState(undefined);\n  const [isLoad, setIsLoad] = useState(false);\n  const [error, setError] = useState(undefined);\n\n  useEffect(() => {\n    axios.get('https://devotionals-api.herokuapp.com/api/v1/devotionals/today')\n    .then(({data}) => setDevotion(data[0]))\n    .catch((erro) => setError(erro))\n    .finally(() => setIsLoad(true))\n  },[]);\n\n  if(error)\n    return(\n      <div className=\"App\">\n        <h2>Ocurio un error</h2>\n        <p>Error: {error.message}</p>\n      </div>\n    );\n  else if(!isLoad)\n    return(\n      <div className=\"App\">\n        <h2 className=\"loading\">Cargando...</h2>\n      </div>\n    );\n  else\n    return(\n      <div className=\"App\">\n        <Devocional data={devocion}/>\n      </div>\n    );\n}\n\nfunction Devocional({data}){\n  return(\n    <div className=\"devocion\">\n        <h2 className=\"devTitle\">{data.title}</h2>\n        <p className=\"devDate\">{data.date}</p>\n        <p className=\"devVers\">{data.vers}</p>\n        <div className=\"devContent\">\n            {data.content.map((n,m) => <p key={m}>{n}</p>)}\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}